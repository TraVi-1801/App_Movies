package com.vic.project.app_movies.utilsimport com.vic.project.app_movies.data.remote.error.ApiExceptionimport io.ktor.client.call.bodyimport io.ktor.client.statement.HttpResponseimport io.ktor.http.HttpStatusCodesuspend inline fun <reified T> HttpResponse.handleBody(): T {    return when (status.value) {        in 200..299 -> body()        401 -> throw ApiException.HttpError(401, "Invalid API key: You must be granted a valid key.")        404 -> throw ApiException.HttpError(404, "Resource not found.")        in 500..599 -> throw ApiException.HttpError(status.value, "Server error.")        else -> throw ApiException.Unexpected    }}