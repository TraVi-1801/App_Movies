package com.vic.project.app_movies.diimport com.vic.project.app_movies.data.local.dao.MovieCacheMetaDaoimport com.vic.project.app_movies.data.local.dao.MovieDaoimport com.vic.project.app_movies.data.local.dao.MovieDetailDaoimport com.vic.project.app_movies.data.local.db.AppDatabaseimport com.vic.project.app_movies.data.local.db.AppDatabase.Companion.invokeimport com.vic.project.app_movies.data.local.db.DatabaseDriverFactoryimport com.vic.project.app_movies.data.local.source.LocalDataSourceimport com.vic.project.app_movies.presentation.viewmodel.HomeViewModelimport com.vic.project.app_movies.presentation.viewmodel.MovieDetailViewModelimport org.koin.core.component.KoinComponentimport org.koin.core.component.injectimport org.koin.dsl.moduleclass KoinIOS : KoinComponent {    companion object {        val shared = KoinIOS()    }    fun doInitKoinCross() {        val dataIOSModule = module {            single { DatabaseDriverFactory() }            single { AppDatabase(get<DatabaseDriverFactory>().create()) }            single { MovieDao(get()) }            single { MovieDetailDao(get()) }            single { MovieCacheMetaDao(get()) }            single {                LocalDataSource(                    movieDao = get(),                    detailDao = get(),                    cacheMetaDao = get(),                    logger = get()                )            }        }        initKoin(listOf(dataIOSModule))    }    val movieDetailViewModel: MovieDetailViewModel by inject()    val movieListingViewModel: HomeViewModel by inject()}